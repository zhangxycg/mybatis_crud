<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxy.dao.IUserDao">
    <!-- 查询所有用户  -->
    <!--配置查询结果的列名和实体类属性名的对应关系-->
    <!--    <resultMap id="userMap" type="com.zxy.pojo.User">-->
    <!--		&lt;!&ndash; 主键字段的对应 &ndash;&gt;-->
    <!--		<id property="userId" column="id"></id>-->
    <!--		&lt;!&ndash; 非主键字段的对应 &ndash;&gt;-->
    <!--		<result property="userName" column="username"></result>-->
    <!--		<result property="userAddress" column="address"></result>-->
    <!--		<result property="userSex" column="sex"></result>-->
    <!--		<result property="userBirthday" column="birthday"></result>-->
    <!--	</resultMap>-->

    <!--    <select id="findAll" resultMap="userMap">-->
    <!--        select *  from user-->
    <!--	</select>-->

    <!--写别名的方式-->
    <select id="findAll" resultType="com.zxy.pojo.User">
        select
         	id as userId,
         	username as userName,
         	address as userAddress,
         	sex as userSex,
         	birthday as userBirthday
         from
         user
    </select>


    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="com.zxy.pojo.User">
        <!-- 配置插入操作后，获取用户的id-->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        INSERT INTO USER (
        id as userId,
        username as userName,
        address as userAddress,
        sex as userSex,
        birthday as userBirthday
        )
        VALUES
        (
        #{userName},
        #{userAddress},
        #{userSex},
        #{userBirthday}
        )
    </insert>
    <!-- 更新用户-->
    <update id="updateUser" parameterType="com.zxy.pojo.User">
		update user
		set
			username=#{userName},
			address=#{userAddress},
			sex=#{userSex},
			birthday=#{userBirthday}
		where
			id=#{userId}
	</update>

    <!-- 删除用户操作 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
		delete from user where id=#{uid}
	</delete>

    <!-- 根据id查询用户信息 -->
    <select id="findById" parameterType="int" resultType="com.zxy.pojo.User">
		select
		     id as userId,
             username as userName,
             address as userAddress,
             sex as userSex,
             birthday as userBirthday
		from
		user
		where
		    id=#{uid}
	</select>

    <!--根据姓名模糊查询用户信息-->
    <select id="findByName" parameterType="string" resultType="com.zxy.pojo.User">
        select
        id as userId,
        username as userName,
        address as userAddress,
        sex as userSex,
        birthday as userBirthday
        from
        user
        where
        username
        like
        #{name1}
        <!-- select * from user where username like '%${value}%'-->
    </select>

    <!-- 获取用户的总记录条数 -->
    <select id="findTotal" resultType="int">
		select count(id) from user
	</select>

    <!--根据QueryVo的条件查询用户信息-->
    <select id="findUserByVO" parameterType="string" resultType="com.zxy.pojo.User">
		select
		    id as userId,
            username as userName,
            address as userAddress,
            sex as userSex,
            birthday as userBirthday
		from
		    user
		where
		    username
		like
		    #{user.userName}
	</select>
</mapper>